#!/usr/bin/env ruby
require 'chunky_png'
require 'pry'
require 'json'

if ARGV[0] == '-u' then
    puts "args: <highest_point_of_reef:f> <stride:i> <heightmap_file>"
    exit
end

highest_point = ARGV[0].to_f
stride = (ARGV[1] || 1).to_i
heightmap_file = Pathname.new ARGV[2].to_s

input = ChunkyPNG::Image.from_file(heightmap_file)
heightmap = []

#binding.pry
(0..input.width-1).each_slice(stride) do |x|
    line = []
    (0..input.height-1).each_slice(stride) do |y|
        #for some reason black is 255, not zero
        colour = input.get_pixel(x.first, y.first) - 255
        line << colour
    end
    heightmap << line
end
heightmap = heightmap.transpose

highest_point_in_img = heightmap.map{|line| line.max}.max.to_f

#invert the height map
inverted = heightmap.map { |line| line.map { |val| val * -1 + highest_point_in_img} }

squish_ratio = highest_point / highest_point_in_img

squished = inverted.map {|line| line.map {|pixel| pixel * squish_ratio}}

puts JSON.pretty_generate(squished)